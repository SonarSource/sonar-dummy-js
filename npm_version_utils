#!/bin/bash

set -euo pipefail

PACKAGE_JSON="package.json"

function get_current_version() {
  jq -r .version "$PACKAGE_JSON"
}

function set_npm_version_with_build_id() {
  local BUILD_ID=$1

  CURRENT_VERSION=$(get_current_version)

  if [ -z "$CURRENT_VERSION" ] || [ "$CURRENT_VERSION" == "null" ]; then
    echo "Could not get version from $PACKAGE_JSON" >&2
    exit 1
  fi

  RELEASE_VERSION=${CURRENT_VERSION%"-SNAPSHOT"}

  # In case of 2 digits, we need to add the 3rd digit (0 obviously)
  # Mandatory in order to compare versions (patch VS non patch)
  DIGIT_COUNT=$(echo "${RELEASE_VERSION//./ }" | wc --words)
  if [ "$DIGIT_COUNT" -lt 3 ]; then
      RELEASE_VERSION="$RELEASE_VERSION.0"
  fi
  NEW_VERSION="$RELEASE_VERSION-$BUILD_ID"

  echo "Replacing version $CURRENT_VERSION with $NEW_VERSION"
  npm version --no-git-tag-version --allow-same-version "$NEW_VERSION"
  export PROJECT_VERSION=$NEW_VERSION
}
