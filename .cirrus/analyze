#!/bin/bash
set -euo pipefail

git fetch --unshallow || true

if [ -n "${GITHUB_BASE_BRANCH:-}" ]; then
    echo "Fetching base branch: $GITHUB_BASE_BRANCH"
    git fetch origin "${GITHUB_BASE_BRANCH}"
fi

if [ -z "${PIPELINE_ID:-}" ]; then
  PIPELINE_ID=$BUILD_NUMBER
fi

# Runs the SonarQube scanner with default and additional parameters.
# Usage: run_sonar_scanner [additional_parameters...]
run_sonar_scanner() {

    local additional_params=("$@")

    # echo "Running SonarQube scanner..."
    if [ -z "${SONAR_HOST_URL:-}" ]; then
      echo "SONAR_HOST_URL is required for SonarQube scanner"
      exit 1
    fi

    if [ -z "${SONAR_TOKEN:-}" ]; then
      echo "SONAR_TOKEN is required for SonarQube scanner"
      exit 1
    fi

    npx sonarqube-scanner -X \
        -Dsonar.host.url="$SONAR_HOST_URL" \
        -Dsonar.token="$SONAR_TOKEN" \
        -Dsonar.analysis.buildNumber="$BUILD_NUMBER" \
        -Dsonar.analysis.pipeline="$PIPELINE_ID" \
        -Dsonar.analysis.sha1="$GIT_SHA1" \
        -Dsonar.analysis.repository="$GITHUB_REPO" \
        "${additional_params[@]}"
    echo "SonarQube scanner finished"
}
